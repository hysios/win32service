# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := node_service
DEFS_Debug := '-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := -Os \
	-gdwarf-2 \
	-Wnewline-eof \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := -fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := -fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug := 

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug := 

INCS_Debug := -I/Users/hysios/.node-gyp/0.8.5/src \
	-I/Users/hysios/.node-gyp/0.8.5/deps/uv/include \
	-I/Users/hysios/.node-gyp/0.8.5/deps/v8/include

DEFS_Release := '-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := -Os \
	-gdwarf-2 \
	-Wnewline-eof \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := -fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := -fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release := 

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release := 

INCS_Release := -I/Users/hysios/.node-gyp/0.8.5/src \
	-I/Users/hysios/.node-gyp/0.8.5/deps/uv/include \
	-I/Users/hysios/.node-gyp/0.8.5/deps/v8/include

OBJS := 

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)


### Rules for final target.
LDFLAGS_Debug := -Wl,-search_paths_first \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-L$(builddir) \
	-install_name @loader_path/node_service.node

LDFLAGS_Release := -Wl,-search_paths_first \
	-mmacosx-version-min=10.5 \
	-arch x86_64 \
	-L$(builddir) \
	-install_name @loader_path/node_service.node

LIBS := -undefined dynamic_lookup

$(builddir)/node_service.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/node_service.node: LIBS := $(LIBS)
$(builddir)/node_service.node: TOOLSET := $(TOOLSET)
$(builddir)/node_service.node:  FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/node_service.node
# Add target alias
.PHONY: node_service
node_service: $(builddir)/node_service.node

# Short alias for building this executable.
.PHONY: node_service.node
node_service.node: $(builddir)/node_service.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/node_service.node

